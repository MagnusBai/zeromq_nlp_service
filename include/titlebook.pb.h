// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: titlebook.proto

#ifndef PROTOBUF_titlebook_2eproto__INCLUDED
#define PROTOBUF_titlebook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_titlebook_2eproto();
void protobuf_AssignDesc_titlebook_2eproto();
void protobuf_ShutdownFile_titlebook_2eproto();

class TitleList;
class IdList;

// ===================================================================

class TitleList : public ::google::protobuf::Message {
 public:
  TitleList();
  virtual ~TitleList();

  TitleList(const TitleList& from);

  inline TitleList& operator=(const TitleList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleList& default_instance();

  void Swap(TitleList* other);

  // implements Message ----------------------------------------------

  TitleList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleList& from);
  void MergeFrom(const TitleList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string title = 1;
  inline int title_size() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title(int index) const;
  inline ::std::string* mutable_title(int index);
  inline void set_title(int index, const ::std::string& value);
  inline void set_title(int index, const char* value);
  inline void set_title(int index, const char* value, size_t size);
  inline ::std::string* add_title();
  inline void add_title(const ::std::string& value);
  inline void add_title(const char* value);
  inline void add_title(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& title() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_title();

  // @@protoc_insertion_point(class_scope:tutorial.TitleList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> title_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_titlebook_2eproto();
  friend void protobuf_AssignDesc_titlebook_2eproto();
  friend void protobuf_ShutdownFile_titlebook_2eproto();

  void InitAsDefaultInstance();
  static TitleList* default_instance_;
};
// -------------------------------------------------------------------

class IdList : public ::google::protobuf::Message {
 public:
  IdList();
  virtual ~IdList();

  IdList(const IdList& from);

  inline IdList& operator=(const IdList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdList& default_instance();

  void Swap(IdList* other);

  // implements Message ----------------------------------------------

  IdList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IdList& from);
  void MergeFrom(const IdList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:tutorial.IdList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_titlebook_2eproto();
  friend void protobuf_AssignDesc_titlebook_2eproto();
  friend void protobuf_ShutdownFile_titlebook_2eproto();

  void InitAsDefaultInstance();
  static IdList* default_instance_;
};
// ===================================================================


// ===================================================================

// TitleList

// repeated string title = 1;
inline int TitleList::title_size() const {
  return title_.size();
}
inline void TitleList::clear_title() {
  title_.Clear();
}
inline const ::std::string& TitleList::title(int index) const {
  return title_.Get(index);
}
inline ::std::string* TitleList::mutable_title(int index) {
  return title_.Mutable(index);
}
inline void TitleList::set_title(int index, const ::std::string& value) {
  title_.Mutable(index)->assign(value);
}
inline void TitleList::set_title(int index, const char* value) {
  title_.Mutable(index)->assign(value);
}
inline void TitleList::set_title(int index, const char* value, size_t size) {
  title_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TitleList::add_title() {
  return title_.Add();
}
inline void TitleList::add_title(const ::std::string& value) {
  title_.Add()->assign(value);
}
inline void TitleList::add_title(const char* value) {
  title_.Add()->assign(value);
}
inline void TitleList::add_title(const char* value, size_t size) {
  title_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TitleList::title() const {
  return title_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TitleList::mutable_title() {
  return &title_;
}

// -------------------------------------------------------------------

// IdList

// repeated int32 id = 1;
inline int IdList::id_size() const {
  return id_.size();
}
inline void IdList::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 IdList::id(int index) const {
  return id_.Get(index);
}
inline void IdList::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
}
inline void IdList::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IdList::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IdList::mutable_id() {
  return &id_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_titlebook_2eproto__INCLUDED
